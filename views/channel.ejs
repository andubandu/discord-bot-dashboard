<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Channel View | Discord Bot Dashboard</title>
  <style>
    :root {
      --discord-blue: #5865F2;
      --discord-green: #57F287;
      --discord-yellow: #FEE75C;
      --discord-red: #ED4245;
      --discord-dark: #36393F;
      --discord-darker: #2F3136;
      --discord-darkest: #202225;
      --discord-light: #FFFFFF;
      --discord-muted: #B9BBBE;
      --discord-border: #23272A;
    }
    body {
      background: linear-gradient(135deg, var(--discord-darkest) 0%, var(--discord-darker) 100%);
      color: var(--discord-light);
      font-family: 'Inter', sans-serif;
      margin: 0;
    }
    .bg-discord-dark { background: var(--discord-dark); }
    .bg-discord-darker { background: var(--discord-darker); }
    .bg-discord-darkest { background: var(--discord-darkest); }
    .bg-discord-blue { background: var(--discord-blue); }
    .bg-discord-blue-hover { background: #4752C4; }
    .text-discord-blue { color: var(--discord-blue); }
    .text-discord-light { color: var(--discord-light); }
    .text-discord-muted { color: var(--discord-muted); }
    .text-discord-red { color: var(--discord-red); }
    .border-discord-border { border-color: var(--discord-border); }
    .rounded { border-radius: 0.5rem; }
    .rounded-full { border-radius: 9999px; }
    .shadow-lg { box-shadow: 0 8px 24px rgba(0,0,0,0.2); }
    .hover\:bg-discord-dark-hover:hover { background: #23272A; }
    .transition-colors { transition: background 0.2s, color 0.2s; }
    .font-bold { font-weight: 700; }
    .font-medium { font-weight: 500; }
    .truncate { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
    .group:hover .group-hover\:text-discord-light { color: var(--discord-light); }
    .w-8 { width: 2rem; }
    .h-8 { height: 2rem; }
    .w-10 { width: 2.5rem; }
    .h-10 { height: 2.5rem; }
    .w-12 { width: 3rem; }
    .h-12 { height: 3rem; }
    .mr-1 { margin-right: 0.25rem; }
    .mr-2 { margin-right: 0.5rem; }
    .mr-3 { margin-right: 0.75rem; }
    .ml-3 { margin-left: 0.75rem; }
    .p-4 { padding: 1rem; }
    .py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }
    .px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
    .px-4 { padding-left: 1rem; padding-right: 1rem; }
    .py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
    .rounded-l-md { border-radius: 0.375rem 0 0 0.375rem; }
    .rounded-r-md { border-radius: 0 0.375rem 0.375rem 0; }
    .border { border-width: 1px; }
    .focus\:outline-none:focus { outline: none; }
    .focus\:ring-2:focus { box-shadow: 0 0 0 2px var(--discord-blue); }
    .focus\:ring-discord-blue:focus { box-shadow: 0 0 0 2px var(--discord-blue); }
    .hover\:opacity-80:hover { opacity: 0.8; }
    .hover\:underline:hover { text-decoration: underline; }
    .bg-discord-red\/20 { background: rgba(237,66,69,0.2); }
    .border-discord-red\/30 { border-color: rgba(237,66,69,0.3); }
  </style>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
  <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-discord-dark text-white">
  <div class="flex h-screen overflow-hidden">
    <%- include('partials/sidebar', { active: 'guilds' }) %>
    
    <main class="flex-1 overflow-hidden bg-discord-dark flex">
      <div class="w-64 bg-discord-darker border-r border-discord-border flex flex-col overflow-hidden">
        <div class="p-4 border-b border-discord-border">
          <div class="flex items-center">
            <a href="/dashboard/guilds/<%= guild.id %>" class="hover:opacity-80 transition-opacity duration-200">
              <% if (guild.icon) { %>
                <img 
                  src="<%= guild.icon %>" 
                  alt="<%= guild.name %>" 
                  class="w-8 h-8 rounded-full mr-3"
                >
              <% } else { %>
                <div class="w-8 h-8 rounded-full bg-discord-blue flex items-center justify-center mr-3">
                  <span class="text-sm font-bold"><%= guild.name.charAt(0) %></span>
                </div>
              <% } %>
            </a>
            <h1 class="text-lg font-bold truncate" title="<%= guild.name %>">
              <%= guild.name %>
            </h1>
          </div>
        </div>
        
        <div class="flex-1 overflow-y-auto p-2">
          <% channels.forEach(category => { %>
            <div class="mb-4">
              <% if (category.name !== 'No Category') { %>
                <h2 class="text-xs font-semibold text-discord-muted uppercase tracking-wider px-2 mt-4 mb-1">
                  <%= category.name %>
                </h2>
              <% } %>
              
              <div class="space-y-0.5">
                <% category.channels.forEach(channel => { %>
                  <a 
                    href="/dashboard/guilds/<%= guild.id %>/channels/<%= channel.id %>" 
                    class="flex items-center px-2 py-1 rounded group transition-colors duration-200 <%= channel.id === currentChannelId ? 'bg-discord-blue/10 text-white' : 'hover:bg-discord-dark-hover text-discord-muted' %>"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="<%= channel.id === currentChannelId ? 'text-discord-light' : 'text-discord-muted' %> mr-1"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
                    <span class="<%= channel.id === currentChannelId ? 'text-discord-light' : 'text-discord-muted group-hover:text-discord-light' %> truncate" title="<%= channel.name %>">
                      <%= channel.name %>
                    </span>
                  </a>
                <% }); %>
              </div>
            </div>
          <% }); %>
        </div>
        
        <div class="p-4 border-t border-discord-border text-sm">
          <a href="/dashboard/guilds/<%= guild.id %>" class="inline-block text-discord-blue hover:underline">
            Back to server overview
          </a>
        </div>
      </div>
      
      <div class="flex-1 flex flex-col overflow-hidden">
        <div class="h-14 border-b border-discord-border flex items-center px-4">
          <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-discord-muted mr-2"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
            <h2 id="channel-name" class="font-semibold">Loading channel...</h2>
          </div>
          
          <div class="ml-4 text-sm text-discord-muted" id="channel-topic"></div>
        </div>
        <div class="p-4 border-t border-discord-border">
          <form id="message-form" class="flex">
            <input 
              type="text" 
              id="message-input" 
              class="flex-1 px-4 py-2 bg-discord-darkest border border-discord-border rounded-l-md focus:outline-none focus:ring-2 focus:ring-discord-blue"
              placeholder="Send a message..."
            >
            <button 
              type="submit" 
              class="bg-discord-blue hover:bg-discord-blue-hover text-white font-medium px-4 py-2 rounded-r-md transition-colors duration-200"
            >
              Send
            </button>
          </form>
        </div>
        
        <div class="flex-1 overflow-y-auto p-4" id="messages-container">
          <div class="flex items-center justify-center h-full text-discord-muted">
            <div class="text-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mx-auto mb-4 opacity-50"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
              <p>Loading messages...</p>
            </div>
          </div>
        </div>
        
      </div>
    </main>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const socket = io();
      const messageForm = document.getElementById('message-form');
      const messageInput = document.getElementById('message-input');
      const messagesContainer = document.getElementById('messages-container');
      const channelName = document.getElementById('channel-name');
      const channelTopic = document.getElementById('channel-topic');
      
      const channelId = '<%= currentChannelId %>';
      const guildId = '<%= guild.id %>';
      
      socket.emit('authenticate', { token: '<%= locals.token %>' });
      
      socket.on('authenticated', () => {
        socket.emit('joinChannel', channelId);
      });
      
      function formatTimestamp(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
      }
      
      function formatMessageDate(timestamp) {
        const date = new Date(timestamp);
        const today = new Date();
        const yesterday = new Date(today);
        yesterday.setDate(yesterday.getDate() - 1);
        
        if (date.toDateString() === today.toDateString()) {
          return 'Today';
        } else if (date.toDateString() === yesterday.toDateString()) {
          return 'Yesterday';
        } else {
          return date.toLocaleDateString([], { 
            month: 'long', 
            day: 'numeric',
            year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined
          });
        }
      }
      
      function createMessageElement(message) {
        const messageEl = document.createElement('div');
        messageEl.className = 'group hover:bg-discord-dark-hover rounded px-2 py-1 -mx-2 message-item';
        messageEl.dataset.id = message.id;
        
        let contentHtml = `
          <div class="flex">
            <img src="${message.author.avatar}" alt="${message.author.username}" class="w-10 h-10 rounded-full mr-3">
            <div class="flex-1 min-w-0">
              <div class="flex items-center">
                <span class="font-medium ${message.author.bot ? 'text-discord-blue' : ''}">${message.author.username}</span>
                <span class="text-xs text-discord-muted ml-2">${formatTimestamp(message.timestamp)}</span>
              </div>
              <div class="message-content break-words">${escapeHtml(message.content)}</div>
            </div>
          </div>
        `;
        
        if (message.attachments && message.attachments.length > 0) {
          contentHtml += '<div class="mt-2 space-y-2">';
          message.attachments.forEach(attachment => {
            if (attachment.contentType?.startsWith('image/')) {
              contentHtml += `
                <div class="max-w-sm">
                  <a href="${attachment.url}" target="_blank" class="inline-block">
                    <img src="${attachment.url}" alt="${attachment.filename}" class="max-w-full rounded-md border border-discord-border hover:opacity-90 transition-opacity">
                  </a>
                </div>
              `;
            } else {
              contentHtml += `
                <div class="bg-discord-darkest rounded-md border border-discord-border p-2">
                  <a href="${attachment.url}" target="_blank" class="text-discord-blue hover:underline flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                    ${attachment.filename}
                  </a>
                </div>
              `;
            }
          });
          contentHtml += '</div>';
        }
        
        if (message.embeds && message.embeds.length > 0) {
          contentHtml += '<div class="mt-2 space-y-2">';
          message.embeds.forEach(embed => {
            const embedColor = embed.color ? `border-l-4 border-l-[#${embed.color.toString(16).padStart(6, '0')}]` : 'border-l-4 border-l-discord-blue';
            
            contentHtml += `
              <div class="bg-discord-darkest rounded-md ${embedColor} pl-3 p-2">
                ${embed.title ? `<div class="font-semibold">${escapeHtml(embed.title)}</div>` : ''}
                ${embed.description ? `<div class="text-discord-light text-sm mt-1">${escapeHtml(embed.description)}</div>` : ''}
                
                ${embed.fields && embed.fields.length > 0 ? `
                  <div class="mt-2 grid grid-cols-1 gap-2">
                    ${embed.fields.map(field => `
                      <div>
                        <div class="font-medium text-xs">${escapeHtml(field.name)}</div>
                        <div class="text-discord-light text-xs">${escapeHtml(field.value)}</div>
                      </div>
                    `).join('')}
                  </div>
                ` : ''}
              </div>
            `;
          });
          contentHtml += '</div>';
        }
        
        messageEl.innerHTML = contentHtml;
        return messageEl;
      }
      
      function escapeHtml(unsafe) {
        if (!unsafe) return '';
        return unsafe
          .replace(/&/g, "&amp;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;")
          .replace(/"/g, "&quot;")
          .replace(/'/g, "&#039;");
      }
      
      function renderMessageGroups(messages) {
        messagesContainer.innerHTML = '';
        
        if (messages.length === 0) {
          messagesContainer.innerHTML = `
            <div class="flex items-center justify-center h-full text-discord-muted">
              <div class="text-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mx-auto mb-4 opacity-50"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg>
                <p>No messages in this channel</p>
              </div>
            </div>
          `;
          return;
        }
        
        let currentDate = null;
        
        messages.forEach(message => {
          const messageDate = new Date(message.timestamp).toDateString();
          
          if (currentDate !== messageDate) {
            currentDate = messageDate;
            const dateDivider = document.createElement('div');
            dateDivider.className = 'flex items-center my-4';
            dateDivider.innerHTML = `
              <div class="flex-grow border-t border-discord-border"></div>
              <div class="mx-4 text-xs text-discord-muted font-medium">${formatMessageDate(message.timestamp)}</div>
              <div class="flex-grow border-t border-discord-border"></div>
            `;
            messagesContainer.appendChild(dateDivider);
          }
          
          const messageEl = createMessageElement(message);
          messagesContainer.appendChild(messageEl);
        });
        
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      }
      
      async function loadChannelData() {
        try {
          const channelData = await fetch(`/api/guilds/${guildId}/channels`)
            .then(res => res.json());
          
          let currentChannel = null;
          
          for (const category of channelData) {
            for (const channel of category.channels) {
              if (channel.id === channelId) {
                currentChannel = channel;
                break;
              }
            }
            if (currentChannel) break;
          }
          
          if (currentChannel) {
            channelName.textContent = currentChannel.name;
            channelTopic.textContent = currentChannel.topic || '';
          }
          
          const messages = await fetch(`/api/channels/${channelId}/messages`)
            .then(res => res.json());
          
          renderMessageGroups(messages);
        } catch (error) {
          console.error('Error loading channel data:', error);
          messagesContainer.innerHTML = `
            <div class="flex items-center justify-center h-full text-discord-red">
              <div class="text-center">
                <p>Error loading messages: ${error.message}</p>
              </div>
            </div>
          `;
        }
      }
      
      loadChannelData();
      
      socket.on('messageCreate', (message) => {
        if (message.channelId === channelId) {
          const messageEl = createMessageElement(message);
          messagesContainer.appendChild(messageEl);
          messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
      });
      
      messageForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const content = messageInput.value.trim();
        if (!content) return;
        
        try {
          await fetch(`/api/channels/${channelId}/messages`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ content })
          });
          
          messageInput.value = '';
        } catch (error) {
          console.error('Error sending message:', error);
          
          const errorDiv = document.createElement('div');
          errorDiv.className = 'bg-discord-red/20 border border-discord-red/30 rounded-md p-2 mb-4';
          errorDiv.textContent = `Error sending message: ${error.message}`;
          messagesContainer.appendChild(errorDiv);
          messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
      });
    });
  </script>
</body>
</html>